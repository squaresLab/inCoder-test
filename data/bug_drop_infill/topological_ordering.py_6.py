{"text": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            node.outgoing_nodes.append(nextnode)\n            nextnode.incoming_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.incoming_nodes:\n            node.incoming_nodes.append(nextnode)\n            nextnode.outgoing_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            node.outgoing_nodes.append(nextnode)\n            nextnode.incoming_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.incoming_nodes:\n            node.incoming_nodes.append(nextnode)\n            nextnode.outgoing_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            node.outgo\n                ordered_nodes.append(nextnode)\n\n    return ordered_nodes", "parts": ["def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            ", "\n                ordered_nodes.append(nextnode)\n\n    return ordered_nodes"], "infills": ["node.outgoing_nodes.append(nextnode)\n            nextnode.incoming_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.incoming_nodes:\n            node.incoming_nodes.append(nextnode)\n            nextnode.outgoing_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            node.outgoing_nodes.append(nextnode)\n            nextnode.incoming_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.incoming_nodes:\n            node.incoming_nodes.append(nextnode)\n            nextnode.outgoing_nodes.append(node)\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n            node.outgo"], "retries_attempted": 1}