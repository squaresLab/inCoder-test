{"text": "from collections import defaultdict\n\ndef shortest_path_lengths(n, length_by_edge):\n    length_by_path = defaultdict(lambda: float('inf'))\n    length_by_path.update({(i, i): 0 for i in range(n)})\n    length_by_path.update(length_by_edge)\n\n    for k in range(n):\n        for i in range(n):\n            for j in range(n):\n                length_by_path[i, j] = min(\n                    length_by_path[i, k] + length_by_path[j, k],\n                    length_by_path[i, k] + length_by_path[j, k]\n                )\n\n    return length_by_path", "parts": ["from collections import defaultdict\n\ndef shortest_path_lengths(n, length_by_edge):\n    length_by_path = defaultdict(lambda: float('inf'))\n    length_by_path.update({(i, i): 0 for i in range(n)})\n    length_by_path.update(length_by_edge)\n\n    for k in range(n):\n        for i in range(n):\n            for j in range(n):\n                length_by_path[i, j] = min(\n                    ", "\n                    length_by_path[i, k] + length_by_path[j, k]\n                )\n\n    return length_by_path"], "infills": ["length_by_path[i, k] + length_by_path[j, k],"], "retries_attempted": 1}