{"text": "def levenshtein(source, target):\n    if source == '' or target == '':\n        return len(source) or len(target)\n\n    source = source.lower()\n    target = target.lower()\n\n    if source == target:\n        return 1 + levenshtein(source[1:], target[1:])\n\n    else:\n        return 1 + min(\n            levenshtein(source,     target[1:]),\n            levenshtein(source[1:], target[1:]),\n            levenshtein(source[1:], target)\n        )", "parts": ["def levenshtein(source, target):\n    if source == '' or target == '':\n        return len(source) or len(target)\n\n    ", "\n        return 1 + levenshtein(source[1:], target[1:])\n\n    else:\n        return 1 + min(\n            levenshtein(source,     target[1:]),\n            levenshtein(source[1:], target[1:]),\n            levenshtein(source[1:], target)\n        )"], "infills": ["source = source.lower()\n    target = target.lower()\n\n    if source == target:"], "retries_attempted": 1}